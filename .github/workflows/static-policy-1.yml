# This is a basic workflow to help you get started with Actions

name: Veracode Policy Scan

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a job to build and submit pipeline scan, you will need to customize the build process accordingly and make sure the artifact you build is used as the file input to the pipeline scan file parameter
  build-and-security-scan:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
    
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it, compiles with maven and copies the .war file for submitting for analysis. Replace this section with your applications build steps
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with: 
        java-version: 1.8
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
    - name: Build with Maven
      run: mvn clean package
          
    - uses: actions/upload-artifact@v1
      with:
        name: verademo.war
        path: target/verademo.war
            
    # Upload and Scan with Veracode (Policy scan)
    - name: Veracode Upload and Scan Action Step
      uses: veracode/veracode-uploadandscan-action@master
      id: upload_and_scan
      with:
        appname: 'Verademo'
        version: '${{ github.run_id }}'
        filepath: 'target/verademo.war'
        vid: '${{ secrets.VERACODE_API_ID }}'
        vkey: '${{ secrets.VERACODE_API_KEY }}'
        scantimeout: 15
